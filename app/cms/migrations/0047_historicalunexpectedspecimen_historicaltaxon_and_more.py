# Generated by Django 4.2.22 on 2025-09-03 08:11

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import simple_history.models


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ("cms", "0046_place"),
    ]

    operations = [
        migrations.CreateModel(
            name="HistoricalUnexpectedSpecimen",
            fields=[
                (
                    "id",
                    models.BigIntegerField(
                        auto_created=True, blank=True, db_index=True, verbose_name="ID"
                    ),
                ),
                (
                    "created_on",
                    models.DateTimeField(
                        blank=True, editable=False, verbose_name="Date Created"
                    ),
                ),
                (
                    "modified_on",
                    models.DateTimeField(
                        blank=True, editable=False, verbose_name="Date Modified"
                    ),
                ),
                ("identifier", models.CharField(max_length=255)),
                ("history_id", models.AutoField(primary_key=True, serialize=False)),
                ("history_date", models.DateTimeField(db_index=True)),
                ("history_change_reason", models.CharField(max_length=100, null=True)),
                (
                    "history_type",
                    models.CharField(
                        choices=[("+", "Created"), ("~", "Changed"), ("-", "Deleted")],
                        max_length=1,
                    ),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Created by",
                    ),
                ),
                (
                    "history_user",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "modified_by",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Modified by",
                    ),
                ),
            ],
            options={
                "verbose_name": "historical Unexpected Specimen",
                "verbose_name_plural": "historical Unexpected Specimens",
                "ordering": ("-history_date", "-history_id"),
                "get_latest_by": ("history_date", "history_id"),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name="HistoricalTaxon",
            fields=[
                (
                    "id",
                    models.BigIntegerField(
                        auto_created=True, blank=True, db_index=True, verbose_name="ID"
                    ),
                ),
                (
                    "created_on",
                    models.DateTimeField(
                        blank=True, editable=False, verbose_name="Date Created"
                    ),
                ),
                (
                    "modified_on",
                    models.DateTimeField(
                        blank=True, editable=False, verbose_name="Date Modified"
                    ),
                ),
                (
                    "taxon_rank",
                    models.CharField(
                        choices=[
                            ("kingdom", "Kingdom"),
                            ("phylum", "Phylum"),
                            ("class", "Class"),
                            ("order", "Order"),
                            ("family", "Family"),
                            ("genus", "Genus"),
                            ("species", "Species"),
                            ("subspecies", "Subspecies"),
                        ],
                        max_length=50,
                    ),
                ),
                ("taxon_name", models.CharField(max_length=50)),
                ("kingdom", models.CharField(max_length=255)),
                ("phylum", models.CharField(max_length=255)),
                ("class_name", models.CharField(max_length=255)),
                ("order", models.CharField(max_length=255)),
                (
                    "superfamily",
                    models.CharField(blank=True, default="", max_length=255, null=True),
                ),
                ("family", models.CharField(max_length=255)),
                (
                    "subfamily",
                    models.CharField(blank=True, default="", max_length=255, null=True),
                ),
                (
                    "tribe",
                    models.CharField(blank=True, default="", max_length=255, null=True),
                ),
                ("genus", models.CharField(max_length=255)),
                ("species", models.CharField(max_length=255)),
                (
                    "infraspecific_epithet",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "scientific_name_authorship",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                ("history_id", models.AutoField(primary_key=True, serialize=False)),
                ("history_date", models.DateTimeField(db_index=True)),
                ("history_change_reason", models.CharField(max_length=100, null=True)),
                (
                    "history_type",
                    models.CharField(
                        choices=[("+", "Created"), ("~", "Changed"), ("-", "Deleted")],
                        max_length=1,
                    ),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Created by",
                    ),
                ),
                (
                    "history_user",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "modified_by",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Modified by",
                    ),
                ),
            ],
            options={
                "verbose_name": "historical Taxon",
                "verbose_name_plural": "historical Taxa",
                "ordering": ("-history_date", "-history_id"),
                "get_latest_by": ("history_date", "history_id"),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name="HistoricalSubject",
            fields=[
                (
                    "id",
                    models.BigIntegerField(
                        auto_created=True, blank=True, db_index=True, verbose_name="ID"
                    ),
                ),
                (
                    "created_on",
                    models.DateTimeField(
                        blank=True, editable=False, verbose_name="Date Created"
                    ),
                ),
                (
                    "modified_on",
                    models.DateTimeField(
                        blank=True, editable=False, verbose_name="Date Modified"
                    ),
                ),
                ("subject_name", models.CharField(max_length=50)),
                ("history_id", models.AutoField(primary_key=True, serialize=False)),
                ("history_date", models.DateTimeField(db_index=True)),
                ("history_change_reason", models.CharField(max_length=100, null=True)),
                (
                    "history_type",
                    models.CharField(
                        choices=[("+", "Created"), ("~", "Changed"), ("-", "Deleted")],
                        max_length=1,
                    ),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Created by",
                    ),
                ),
                (
                    "history_user",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "modified_by",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Modified by",
                    ),
                ),
            ],
            options={
                "verbose_name": "historical Subject",
                "verbose_name_plural": "historical Subjects",
                "ordering": ("-history_date", "-history_id"),
                "get_latest_by": ("history_date", "history_id"),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name="HistoricalStorage",
            fields=[
                (
                    "id",
                    models.BigIntegerField(
                        auto_created=True, blank=True, db_index=True, verbose_name="ID"
                    ),
                ),
                (
                    "created_on",
                    models.DateTimeField(
                        blank=True, editable=False, verbose_name="Date Created"
                    ),
                ),
                (
                    "modified_on",
                    models.DateTimeField(
                        blank=True, editable=False, verbose_name="Date Modified"
                    ),
                ),
                ("area", models.CharField(max_length=255)),
                ("history_id", models.AutoField(primary_key=True, serialize=False)),
                ("history_date", models.DateTimeField(db_index=True)),
                ("history_change_reason", models.CharField(max_length=100, null=True)),
                (
                    "history_type",
                    models.CharField(
                        choices=[("+", "Created"), ("~", "Changed"), ("-", "Deleted")],
                        max_length=1,
                    ),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Created by",
                    ),
                ),
                (
                    "history_user",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "modified_by",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Modified by",
                    ),
                ),
                (
                    "parent_area",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to="cms.storage",
                    ),
                ),
            ],
            options={
                "verbose_name": "historical Storage",
                "verbose_name_plural": "historical Storages",
                "ordering": ("-history_date", "-history_id"),
                "get_latest_by": ("history_date", "history_id"),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name="HistoricalSpecimenGeology",
            fields=[
                (
                    "id",
                    models.BigIntegerField(
                        auto_created=True, blank=True, db_index=True, verbose_name="ID"
                    ),
                ),
                (
                    "created_on",
                    models.DateTimeField(
                        blank=True, editable=False, verbose_name="Date Created"
                    ),
                ),
                (
                    "modified_on",
                    models.DateTimeField(
                        blank=True, editable=False, verbose_name="Date Modified"
                    ),
                ),
                ("history_id", models.AutoField(primary_key=True, serialize=False)),
                ("history_date", models.DateTimeField(db_index=True)),
                ("history_change_reason", models.CharField(max_length=100, null=True)),
                (
                    "history_type",
                    models.CharField(
                        choices=[("+", "Created"), ("~", "Changed"), ("-", "Deleted")],
                        max_length=1,
                    ),
                ),
                (
                    "accession",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        help_text="Accession this specimen geology belongs to",
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to="cms.accession",
                    ),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Created by",
                    ),
                ),
                (
                    "earliest_geological_context",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        help_text="Earliest geological context of the specimen",
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to="cms.geologicalcontext",
                    ),
                ),
                (
                    "history_user",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "latest_geological_context",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        help_text="Latest geological context of the specimen",
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to="cms.geologicalcontext",
                    ),
                ),
                (
                    "modified_by",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Modified by",
                    ),
                ),
            ],
            options={
                "verbose_name": "historical Specimen Geology",
                "verbose_name_plural": "historical Specimen Geologies",
                "ordering": ("-history_date", "-history_id"),
                "get_latest_by": ("history_date", "history_id"),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name="HistoricalReference",
            fields=[
                (
                    "id",
                    models.BigIntegerField(
                        auto_created=True, blank=True, db_index=True, verbose_name="ID"
                    ),
                ),
                (
                    "created_on",
                    models.DateTimeField(
                        blank=True, editable=False, verbose_name="Date Created"
                    ),
                ),
                (
                    "modified_on",
                    models.DateTimeField(
                        blank=True, editable=False, verbose_name="Date Modified"
                    ),
                ),
                ("title", models.CharField(max_length=255)),
                ("first_author", models.CharField(max_length=255)),
                ("year", models.CharField(max_length=4)),
                ("journal", models.CharField(blank=True, max_length=255, null=True)),
                ("volume", models.CharField(blank=True, max_length=10, null=True)),
                ("issue", models.CharField(blank=True, max_length=10, null=True)),
                ("pages", models.CharField(blank=True, max_length=10, null=True)),
                ("doi", models.CharField(blank=True, max_length=255, null=True)),
                ("citation", models.TextField()),
                ("history_id", models.AutoField(primary_key=True, serialize=False)),
                ("history_date", models.DateTimeField(db_index=True)),
                ("history_change_reason", models.CharField(max_length=100, null=True)),
                (
                    "history_type",
                    models.CharField(
                        choices=[("+", "Created"), ("~", "Changed"), ("-", "Deleted")],
                        max_length=1,
                    ),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Created by",
                    ),
                ),
                (
                    "history_user",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "modified_by",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Modified by",
                    ),
                ),
            ],
            options={
                "verbose_name": "historical Reference",
                "verbose_name_plural": "historical References",
                "ordering": ("-history_date", "-history_id"),
                "get_latest_by": ("history_date", "history_id"),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name="HistoricalPreparationMedia",
            fields=[
                (
                    "id",
                    models.BigIntegerField(
                        auto_created=True, blank=True, db_index=True, verbose_name="ID"
                    ),
                ),
                (
                    "created_on",
                    models.DateTimeField(
                        blank=True, editable=False, verbose_name="Date Created"
                    ),
                ),
                (
                    "modified_on",
                    models.DateTimeField(
                        blank=True, editable=False, verbose_name="Date Modified"
                    ),
                ),
                (
                    "context",
                    models.CharField(
                        choices=[
                            ("before", "Before Preparation"),
                            ("after", "After Preparation"),
                            ("in_progress", "In Progress"),
                            ("other", "Other"),
                        ],
                        default="other",
                        help_text="Indicates when this media was captured.",
                        max_length=20,
                    ),
                ),
                (
                    "notes",
                    models.TextField(
                        blank=True,
                        help_text="Optional comments or observations about this media.",
                        null=True,
                    ),
                ),
                ("history_id", models.AutoField(primary_key=True, serialize=False)),
                ("history_date", models.DateTimeField(db_index=True)),
                ("history_change_reason", models.CharField(max_length=100, null=True)),
                (
                    "history_type",
                    models.CharField(
                        choices=[("+", "Created"), ("~", "Changed"), ("-", "Deleted")],
                        max_length=1,
                    ),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Created by",
                    ),
                ),
                (
                    "history_user",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "media",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to="cms.media",
                    ),
                ),
                (
                    "modified_by",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Modified by",
                    ),
                ),
                (
                    "preparation",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to="cms.preparation",
                    ),
                ),
            ],
            options={
                "verbose_name": "historical Preparation Media",
                "verbose_name_plural": "historical Preparation Media",
                "ordering": ("-history_date", "-history_id"),
                "get_latest_by": ("history_date", "history_id"),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name="HistoricalPreparationMaterial",
            fields=[
                (
                    "id",
                    models.BigIntegerField(
                        auto_created=True, blank=True, db_index=True, verbose_name="ID"
                    ),
                ),
                (
                    "created_on",
                    models.DateTimeField(
                        blank=True, editable=False, verbose_name="Date Created"
                    ),
                ),
                (
                    "modified_on",
                    models.DateTimeField(
                        blank=True, editable=False, verbose_name="Date Modified"
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        db_index=True,
                        help_text="Name of the preparation material (e.g., Paraloid B72, Cyanoacrylate).",
                        max_length=255,
                    ),
                ),
                (
                    "description",
                    models.TextField(
                        blank=True,
                        help_text="Details about the material (e.g., properties, best use cases).",
                        null=True,
                    ),
                ),
                ("history_id", models.AutoField(primary_key=True, serialize=False)),
                ("history_date", models.DateTimeField(db_index=True)),
                ("history_change_reason", models.CharField(max_length=100, null=True)),
                (
                    "history_type",
                    models.CharField(
                        choices=[("+", "Created"), ("~", "Changed"), ("-", "Deleted")],
                        max_length=1,
                    ),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Created by",
                    ),
                ),
                (
                    "history_user",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "modified_by",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Modified by",
                    ),
                ),
            ],
            options={
                "verbose_name": "historical Preparation Material",
                "verbose_name_plural": "historical Preparation Materials",
                "ordering": ("-history_date", "-history_id"),
                "get_latest_by": ("history_date", "history_id"),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name="HistoricalPreparationLog",
            fields=[
                (
                    "id",
                    models.BigIntegerField(
                        auto_created=True, blank=True, db_index=True, verbose_name="ID"
                    ),
                ),
                (
                    "created_on",
                    models.DateTimeField(
                        blank=True, editable=False, verbose_name="Date Created"
                    ),
                ),
                (
                    "modified_on",
                    models.DateTimeField(
                        blank=True, editable=False, verbose_name="Date Modified"
                    ),
                ),
                ("changes", models.TextField(help_text="Description of changes made.")),
                (
                    "changed_on",
                    models.DateTimeField(
                        blank=True, editable=False, help_text="Timestamp of the change."
                    ),
                ),
                ("history_id", models.AutoField(primary_key=True, serialize=False)),
                ("history_date", models.DateTimeField(db_index=True)),
                ("history_change_reason", models.CharField(max_length=100, null=True)),
                (
                    "history_type",
                    models.CharField(
                        choices=[("+", "Created"), ("~", "Changed"), ("-", "Deleted")],
                        max_length=1,
                    ),
                ),
                (
                    "changed_by",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        help_text="User who made the change.",
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Created by",
                    ),
                ),
                (
                    "history_user",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "modified_by",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Modified by",
                    ),
                ),
                (
                    "preparation",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        help_text="The preparation record that was modified.",
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to="cms.preparation",
                    ),
                ),
            ],
            options={
                "verbose_name": "historical Preparation Log",
                "verbose_name_plural": "historical Preparation Logs",
                "ordering": ("-history_date", "-history_id"),
                "get_latest_by": ("history_date", "history_id"),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name="HistoricalPreparation",
            fields=[
                (
                    "id",
                    models.BigIntegerField(
                        auto_created=True, blank=True, db_index=True, verbose_name="ID"
                    ),
                ),
                (
                    "created_on",
                    models.DateTimeField(
                        blank=True, editable=False, verbose_name="Date Created"
                    ),
                ),
                (
                    "modified_on",
                    models.DateTimeField(
                        blank=True, editable=False, verbose_name="Date Modified"
                    ),
                ),
                (
                    "preparation_type",
                    models.CharField(
                        choices=[
                            ("cleaning", "Cleaning"),
                            ("consolidation", "Consolidation"),
                            ("casting", "Casting"),
                            ("repair", "Repair"),
                            ("restoration", "Restoration"),
                            ("conservation", "Conservation"),
                            ("mounting", "Mounting"),
                            ("other", "Other"),
                        ],
                        help_text="The type of preparation or maintenance performed.",
                        max_length=50,
                    ),
                ),
                (
                    "reason",
                    models.TextField(
                        blank=True,
                        help_text="The reason for the preparation (e.g., exhibition, conservation, research).",
                        null=True,
                    ),
                ),
                (
                    "started_on",
                    models.DateField(help_text="Date when preparation started."),
                ),
                (
                    "completed_on",
                    models.DateField(
                        blank=True,
                        help_text="Date when preparation was completed.",
                        null=True,
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("Pending", "Pending"),
                            ("In Progress", "In Progress"),
                            ("Completed", "Completed"),
                            ("Approved", "Approved"),
                            ("Declined", "Declined"),
                        ],
                        default="Pending",
                        help_text="Current status of the preparation process.",
                        max_length=20,
                    ),
                ),
                (
                    "condition_before",
                    models.TextField(
                        blank=True,
                        help_text="Condition of the specimen before preparation.",
                        null=True,
                    ),
                ),
                (
                    "condition_after",
                    models.TextField(
                        blank=True,
                        help_text="Condition of the specimen after preparation.",
                        null=True,
                    ),
                ),
                (
                    "preparation_method",
                    models.TextField(
                        blank=True,
                        help_text="Describe the preparation technique used (e.g., mechanical cleaning, acid preparation).",
                        null=True,
                    ),
                ),
                (
                    "chemicals_used",
                    models.TextField(
                        blank=True,
                        help_text="List any chemicals or adhesives applied during the preparation.",
                        null=True,
                    ),
                ),
                (
                    "approval_status",
                    models.CharField(
                        choices=[
                            ("pending", "Pending"),
                            ("approved", "Approved"),
                            ("declined", "Declined"),
                        ],
                        default="pending",
                        help_text="Approval decision by the curator.",
                        max_length=20,
                    ),
                ),
                (
                    "approval_date",
                    models.DateTimeField(
                        blank=True,
                        help_text="Timestamp when the curator made a decision.",
                        null=True,
                    ),
                ),
                (
                    "curator_comments",
                    models.TextField(
                        blank=True,
                        help_text="Curator's comments on the preparation (approval or rejection reasons).",
                        null=True,
                    ),
                ),
                (
                    "report_link",
                    models.URLField(
                        blank=True,
                        help_text="Link to an external report or documentation for this preparation.",
                        null=True,
                    ),
                ),
                (
                    "notes",
                    models.TextField(
                        blank=True,
                        help_text="Additional notes or observations about the preparation.",
                        null=True,
                    ),
                ),
                ("history_id", models.AutoField(primary_key=True, serialize=False)),
                ("history_date", models.DateTimeField(db_index=True)),
                ("history_change_reason", models.CharField(max_length=100, null=True)),
                (
                    "history_type",
                    models.CharField(
                        choices=[("+", "Created"), ("~", "Changed"), ("-", "Deleted")],
                        max_length=1,
                    ),
                ),
                (
                    "accession_row",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        help_text="The specimen undergoing preparation.",
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to="cms.accessionrow",
                    ),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Created by",
                    ),
                ),
                (
                    "curator",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        help_text="The curator who reviews and approves/declines the preparation.",
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "history_user",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "modified_by",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Modified by",
                    ),
                ),
                (
                    "original_storage",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        help_text="Where the specimen was stored before preparation.",
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to="cms.storage",
                    ),
                ),
                (
                    "preparator",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        help_text="The museum staff responsible for the preparation.",
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "temporary_storage",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        help_text="Where the specimen was moved during preparation.",
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to="cms.storage",
                    ),
                ),
            ],
            options={
                "verbose_name": "historical Preparation",
                "verbose_name_plural": "historical Preparations",
                "ordering": ("-history_date", "-history_id"),
                "get_latest_by": ("history_date", "history_id"),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name="HistoricalPlace",
            fields=[
                (
                    "id",
                    models.BigIntegerField(
                        auto_created=True, blank=True, db_index=True, verbose_name="ID"
                    ),
                ),
                (
                    "created_on",
                    models.DateTimeField(
                        blank=True, editable=False, verbose_name="Date Created"
                    ),
                ),
                (
                    "modified_on",
                    models.DateTimeField(
                        blank=True, editable=False, verbose_name="Date Modified"
                    ),
                ),
                (
                    "relation_type",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("partOf", "Part Of"),
                            ("synonym", "Synonym"),
                            ("abbreviation", "Abbreviation"),
                        ],
                        max_length=20,
                        null=True,
                    ),
                ),
                ("name", models.CharField(max_length=100)),
                (
                    "place_type",
                    models.CharField(
                        choices=[
                            ("Region", "Region"),
                            ("Site", "Site"),
                            ("CollectingArea", "Collecting Area"),
                            ("square", "Square"),
                        ],
                        max_length=20,
                    ),
                ),
                ("description", models.TextField(blank=True, null=True)),
                ("comment", models.TextField(blank=True, null=True)),
                ("part_of_hierarchy", models.CharField(editable=False, max_length=255)),
                ("history_id", models.AutoField(primary_key=True, serialize=False)),
                ("history_date", models.DateTimeField(db_index=True)),
                ("history_change_reason", models.CharField(max_length=100, null=True)),
                (
                    "history_type",
                    models.CharField(
                        choices=[("+", "Created"), ("~", "Changed"), ("-", "Deleted")],
                        max_length=1,
                    ),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Created by",
                    ),
                ),
                (
                    "history_user",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "locality",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to="cms.locality",
                    ),
                ),
                (
                    "modified_by",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Modified by",
                    ),
                ),
                (
                    "related_place",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to="cms.place",
                    ),
                ),
            ],
            options={
                "verbose_name": "historical place",
                "verbose_name_plural": "historical places",
                "ordering": ("-history_date", "-history_id"),
                "get_latest_by": ("history_date", "history_id"),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name="HistoricalPerson",
            fields=[
                (
                    "id",
                    models.BigIntegerField(
                        auto_created=True, blank=True, db_index=True, verbose_name="ID"
                    ),
                ),
                (
                    "created_on",
                    models.DateTimeField(
                        blank=True, editable=False, verbose_name="Date Created"
                    ),
                ),
                (
                    "modified_on",
                    models.DateTimeField(
                        blank=True, editable=False, verbose_name="Date Modified"
                    ),
                ),
                ("first_name", models.CharField(max_length=255)),
                ("last_name", models.CharField(max_length=255)),
                ("orcid", models.CharField(blank=True, max_length=255, null=True)),
                ("history_id", models.AutoField(primary_key=True, serialize=False)),
                ("history_date", models.DateTimeField(db_index=True)),
                ("history_change_reason", models.CharField(max_length=100, null=True)),
                (
                    "history_type",
                    models.CharField(
                        choices=[("+", "Created"), ("~", "Changed"), ("-", "Deleted")],
                        max_length=1,
                    ),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Created by",
                    ),
                ),
                (
                    "history_user",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "modified_by",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Modified by",
                    ),
                ),
            ],
            options={
                "verbose_name": "historical Person",
                "verbose_name_plural": "historical Persons",
                "ordering": ("-history_date", "-history_id"),
                "get_latest_by": ("history_date", "history_id"),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name="HistoricalNatureOfSpecimen",
            fields=[
                (
                    "id",
                    models.BigIntegerField(
                        auto_created=True, blank=True, db_index=True, verbose_name="ID"
                    ),
                ),
                (
                    "created_on",
                    models.DateTimeField(
                        blank=True, editable=False, verbose_name="Date Created"
                    ),
                ),
                (
                    "modified_on",
                    models.DateTimeField(
                        blank=True, editable=False, verbose_name="Date Modified"
                    ),
                ),
                ("side", models.CharField(blank=True, max_length=50, null=True)),
                ("condition", models.CharField(blank=True, max_length=255, null=True)),
                (
                    "verbatim_element",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                ("portion", models.CharField(blank=True, max_length=255, null=True)),
                ("fragments", models.IntegerField(default=0)),
                ("history_id", models.AutoField(primary_key=True, serialize=False)),
                ("history_date", models.DateTimeField(db_index=True)),
                ("history_change_reason", models.CharField(max_length=100, null=True)),
                (
                    "history_type",
                    models.CharField(
                        choices=[("+", "Created"), ("~", "Changed"), ("-", "Deleted")],
                        max_length=1,
                    ),
                ),
                (
                    "accession_row",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to="cms.accessionrow",
                    ),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Created by",
                    ),
                ),
                (
                    "element",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to="cms.element",
                    ),
                ),
                (
                    "history_user",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "modified_by",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Modified by",
                    ),
                ),
            ],
            options={
                "verbose_name": "historical Nature Of Specimen",
                "verbose_name_plural": "historical Nature Of Specimens",
                "ordering": ("-history_date", "-history_id"),
                "get_latest_by": ("history_date", "history_id"),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name="HistoricalMedia",
            fields=[
                (
                    "id",
                    models.BigIntegerField(
                        auto_created=True, blank=True, db_index=True, verbose_name="ID"
                    ),
                ),
                (
                    "created_on",
                    models.DateTimeField(
                        blank=True, editable=False, verbose_name="Date Created"
                    ),
                ),
                (
                    "modified_on",
                    models.DateTimeField(
                        blank=True, editable=False, verbose_name="Date Modified"
                    ),
                ),
                (
                    "file_name",
                    models.CharField(
                        blank=True,
                        help_text="The name of the media file",
                        max_length=255,
                        null=True,
                    ),
                ),
                (
                    "type",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("photo", "Photo"),
                            ("video", "Video"),
                            ("audio", "Audio"),
                            ("document", "Document"),
                            ("text", "Text"),
                            ("other", "Other"),
                        ],
                        help_text="Type of the media (e.g., photo, video, etc.)",
                        max_length=50,
                        null=True,
                    ),
                ),
                (
                    "format",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("jpg", "JPG"),
                            ("jpeg", "JPEG"),
                            ("png", "PNG"),
                            ("gif", "GIF"),
                            ("bmp", "BMP"),
                        ],
                        help_text="File format of the media (supported formats: 'jpg', 'jpeg', 'png', 'gif', 'bmp')",
                        max_length=50,
                        null=True,
                    ),
                ),
                ("media_location", models.TextField(max_length=100)),
                (
                    "license",
                    models.CharField(
                        choices=[
                            ("CC0", "Public Domain (CC0)"),
                            ("CC_BY", "Creative Commons - Attribution (CC BY)"),
                            (
                                "CC_BY_SA",
                                "Creative Commons - Attribution-ShareAlike (CC BY-SA)",
                            ),
                            (
                                "CC_BY_NC",
                                "Creative Commons - Attribution-NonCommercial (CC BY-NC)",
                            ),
                            (
                                "CC_BY_ND",
                                "Creative Commons - Attribution-NoDerivatives (CC BY-ND)",
                            ),
                            (
                                "CC_BY_NC_SA",
                                "Creative Commons - Attribution-NonCommercial-ShareAlike (CC BY-NC-SA)",
                            ),
                            (
                                "CC_BY_NC_ND",
                                "Creative Commons - Attribution-NonCommercial-NoDerivatives (CC BY-NC-ND)",
                            ),
                            ("GFDL", "GNU Free Documentation License (GFDL)"),
                            ("OGL", "Open Government License (OGL)"),
                            ("RF", "Royalty-Free (RF)"),
                            ("RM", "Rights-Managed (RM)"),
                            ("EDITORIAL", "Editorial Use Only"),
                            ("CUSTOM_ATTRIBUTION", "Attribution (Custom License)"),
                            ("SHAREWARE", "Shareware/Donationware"),
                            ("EULA", "End-User License Agreement (EULA)"),
                        ],
                        default="CC0",
                        help_text="License information for the media file",
                        max_length=30,
                    ),
                ),
                (
                    "rights_holder",
                    models.CharField(
                        blank=True,
                        help_text="The individual or organization holding rights to the media",
                        max_length=255,
                        null=True,
                    ),
                ),
                ("history_id", models.AutoField(primary_key=True, serialize=False)),
                ("history_date", models.DateTimeField(db_index=True)),
                ("history_change_reason", models.CharField(max_length=100, null=True)),
                (
                    "history_type",
                    models.CharField(
                        choices=[("+", "Created"), ("~", "Changed"), ("-", "Deleted")],
                        max_length=1,
                    ),
                ),
                (
                    "accession",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        help_text="Accession this media belongs to",
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to="cms.accession",
                    ),
                ),
                (
                    "accession_row",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        help_text="Accession row this media belongs to",
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to="cms.accessionrow",
                    ),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Created by",
                    ),
                ),
                (
                    "history_user",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "modified_by",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Modified by",
                    ),
                ),
            ],
            options={
                "verbose_name": "historical Media",
                "verbose_name_plural": "historical Medias",
                "ordering": ("-history_date", "-history_id"),
                "get_latest_by": ("history_date", "history_id"),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name="HistoricalLocality",
            fields=[
                (
                    "id",
                    models.BigIntegerField(
                        auto_created=True, blank=True, db_index=True, verbose_name="ID"
                    ),
                ),
                (
                    "created_on",
                    models.DateTimeField(
                        blank=True, editable=False, verbose_name="Date Created"
                    ),
                ),
                (
                    "modified_on",
                    models.DateTimeField(
                        blank=True, editable=False, verbose_name="Date Modified"
                    ),
                ),
                (
                    "abbreviation",
                    models.CharField(
                        help_text="Enter the Abbreviation of the Locality", max_length=2
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        help_text="The name of the Locality.", max_length=50
                    ),
                ),
                ("history_id", models.AutoField(primary_key=True, serialize=False)),
                ("history_date", models.DateTimeField(db_index=True)),
                ("history_change_reason", models.CharField(max_length=100, null=True)),
                (
                    "history_type",
                    models.CharField(
                        choices=[("+", "Created"), ("~", "Changed"), ("-", "Deleted")],
                        max_length=1,
                    ),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Created by",
                    ),
                ),
                (
                    "history_user",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "modified_by",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Modified by",
                    ),
                ),
            ],
            options={
                "verbose_name": "historical Locality",
                "verbose_name_plural": "historical Localities",
                "ordering": ("-history_date", "-history_id"),
                "get_latest_by": ("history_date", "history_id"),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name="HistoricalIdentification",
            fields=[
                (
                    "id",
                    models.BigIntegerField(
                        auto_created=True, blank=True, db_index=True, verbose_name="ID"
                    ),
                ),
                (
                    "created_on",
                    models.DateTimeField(
                        blank=True, editable=False, verbose_name="Date Created"
                    ),
                ),
                (
                    "modified_on",
                    models.DateTimeField(
                        blank=True, editable=False, verbose_name="Date Modified"
                    ),
                ),
                ("taxon", models.CharField(blank=True, max_length=255, null=True)),
                ("date_identified", models.DateField(blank=True, null=True)),
                (
                    "identification_qualifier",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "verbatim_identification",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                ("identification_remarks", models.TextField(blank=True, null=True)),
                ("history_id", models.AutoField(primary_key=True, serialize=False)),
                ("history_date", models.DateTimeField(db_index=True)),
                ("history_change_reason", models.CharField(max_length=100, null=True)),
                (
                    "history_type",
                    models.CharField(
                        choices=[("+", "Created"), ("~", "Changed"), ("-", "Deleted")],
                        max_length=1,
                    ),
                ),
                (
                    "accession_row",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to="cms.accessionrow",
                    ),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Created by",
                    ),
                ),
                (
                    "history_user",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "identified_by",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to="cms.person",
                    ),
                ),
                (
                    "modified_by",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Modified by",
                    ),
                ),
                (
                    "reference",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to="cms.reference",
                    ),
                ),
            ],
            options={
                "verbose_name": "historical Identification",
                "verbose_name_plural": "historical Identifications",
                "ordering": ("-history_date", "-history_id"),
                "get_latest_by": ("history_date", "history_id"),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name="HistoricalGeologicalContext",
            fields=[
                (
                    "id",
                    models.BigIntegerField(
                        auto_created=True, blank=True, db_index=True, verbose_name="ID"
                    ),
                ),
                (
                    "created_on",
                    models.DateTimeField(
                        blank=True, editable=False, verbose_name="Date Created"
                    ),
                ),
                (
                    "modified_on",
                    models.DateTimeField(
                        blank=True, editable=False, verbose_name="Date Modified"
                    ),
                ),
                (
                    "geological_context_type",
                    models.CharField(
                        help_text="The type of geological context (e.g., Formation, Period, etc.)",
                        max_length=255,
                    ),
                ),
                (
                    "unit_name",
                    models.CharField(
                        help_text="The name of the geological unit (e.g., stratum, layer, etc.)",
                        max_length=255,
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        help_text="The name of the geological context (e.g., name of the formation)",
                        max_length=255,
                    ),
                ),
                ("history_id", models.AutoField(primary_key=True, serialize=False)),
                ("history_date", models.DateTimeField(db_index=True)),
                ("history_change_reason", models.CharField(max_length=100, null=True)),
                (
                    "history_type",
                    models.CharField(
                        choices=[("+", "Created"), ("~", "Changed"), ("-", "Deleted")],
                        max_length=1,
                    ),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Created by",
                    ),
                ),
                (
                    "history_user",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "modified_by",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Modified by",
                    ),
                ),
                (
                    "parent_geological_context",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        help_text="Parent geological context (if applicable)",
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to="cms.geologicalcontext",
                    ),
                ),
            ],
            options={
                "verbose_name": "historical Geological Context",
                "verbose_name_plural": "historical Geological Contexties",
                "ordering": ("-history_date", "-history_id"),
                "get_latest_by": ("history_date", "history_id"),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name="HistoricalFieldSlip",
            fields=[
                (
                    "id",
                    models.BigIntegerField(
                        auto_created=True, blank=True, db_index=True, verbose_name="ID"
                    ),
                ),
                (
                    "created_on",
                    models.DateTimeField(
                        blank=True, editable=False, verbose_name="Date Created"
                    ),
                ),
                (
                    "modified_on",
                    models.DateTimeField(
                        blank=True, editable=False, verbose_name="Date Modified"
                    ),
                ),
                (
                    "field_number",
                    models.CharField(
                        help_text="Field number assigned to the specimen.",
                        max_length=100,
                    ),
                ),
                (
                    "discoverer",
                    models.CharField(
                        blank=True,
                        help_text="Person who discovered the specimen.",
                        max_length=255,
                        null=True,
                    ),
                ),
                (
                    "collector",
                    models.CharField(
                        blank=True,
                        help_text="Person who collected the specimen.",
                        max_length=255,
                        null=True,
                    ),
                ),
                (
                    "collection_date",
                    models.DateField(
                        blank=True,
                        help_text="Date the specimen was collected.",
                        null=True,
                    ),
                ),
                (
                    "verbatim_locality",
                    models.CharField(
                        blank=True,
                        help_text="Original locality description as recorded.",
                        max_length=255,
                        null=True,
                    ),
                ),
                (
                    "verbatim_taxon",
                    models.CharField(
                        help_text="Taxon name as recorded in the field.", max_length=255
                    ),
                ),
                (
                    "verbatim_element",
                    models.CharField(
                        help_text="Skeletal element or fossil part recorded in the field.",
                        max_length=255,
                    ),
                ),
                (
                    "verbatim_horizon",
                    models.CharField(
                        blank=True,
                        help_text="Geological horizon as recorded in the field.",
                        max_length=255,
                        null=True,
                    ),
                ),
                (
                    "verbatim_method",
                    models.CharField(
                        blank=True,
                        help_text="Method used for discovery or collection (sieving etc.).",
                        max_length=255,
                        null=True,
                    ),
                ),
                (
                    "aerial_photo",
                    models.CharField(
                        blank=True,
                        help_text="Aerial photo reference (if applicable).",
                        max_length=25,
                        null=True,
                    ),
                ),
                (
                    "verbatim_latitude",
                    models.CharField(
                        blank=True,
                        help_text="Latitude as recorded in the field.",
                        max_length=255,
                        null=True,
                    ),
                ),
                (
                    "verbatim_longitude",
                    models.CharField(
                        blank=True,
                        help_text="Longitude as recorded in the field.",
                        max_length=255,
                        null=True,
                    ),
                ),
                (
                    "verbatim_SRS",
                    models.CharField(
                        blank=True,
                        help_text="Spatial reference system used in the field.",
                        max_length=255,
                        null=True,
                    ),
                ),
                (
                    "verbatim_coordinate_system",
                    models.CharField(
                        blank=True,
                        help_text="Coordinate system used in the field (WGS84 etc.).",
                        max_length=255,
                        null=True,
                    ),
                ),
                (
                    "verbatim_elevation",
                    models.CharField(
                        blank=True,
                        help_text="Elevation as recorded.",
                        max_length=255,
                        null=True,
                    ),
                ),
                ("history_id", models.AutoField(primary_key=True, serialize=False)),
                ("history_date", models.DateTimeField(db_index=True)),
                ("history_change_reason", models.CharField(max_length=100, null=True)),
                (
                    "history_type",
                    models.CharField(
                        choices=[("+", "Created"), ("~", "Changed"), ("-", "Deleted")],
                        max_length=1,
                    ),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Created by",
                    ),
                ),
                (
                    "history_user",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "modified_by",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Modified by",
                    ),
                ),
            ],
            options={
                "verbose_name": "historical Field Slip",
                "verbose_name_plural": "historical Field Slips",
                "ordering": ("-history_date", "-history_id"),
                "get_latest_by": ("history_date", "history_id"),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name="HistoricalElement",
            fields=[
                (
                    "id",
                    models.BigIntegerField(
                        auto_created=True, blank=True, db_index=True, verbose_name="ID"
                    ),
                ),
                (
                    "created_on",
                    models.DateTimeField(
                        blank=True, editable=False, verbose_name="Date Created"
                    ),
                ),
                (
                    "modified_on",
                    models.DateTimeField(
                        blank=True, editable=False, verbose_name="Date Modified"
                    ),
                ),
                ("name", models.CharField(max_length=255)),
                ("history_id", models.AutoField(primary_key=True, serialize=False)),
                ("history_date", models.DateTimeField(db_index=True)),
                ("history_change_reason", models.CharField(max_length=100, null=True)),
                (
                    "history_type",
                    models.CharField(
                        choices=[("+", "Created"), ("~", "Changed"), ("-", "Deleted")],
                        max_length=1,
                    ),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Created by",
                    ),
                ),
                (
                    "history_user",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "modified_by",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Modified by",
                    ),
                ),
                (
                    "parent_element",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to="cms.element",
                    ),
                ),
            ],
            options={
                "verbose_name": "historical Element",
                "verbose_name_plural": "historical Elements",
                "ordering": ("-history_date", "-history_id"),
                "get_latest_by": ("history_date", "history_id"),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name="HistoricalDrawerRegisterLog",
            fields=[
                (
                    "id",
                    models.BigIntegerField(
                        auto_created=True, blank=True, db_index=True, verbose_name="ID"
                    ),
                ),
                (
                    "created_on",
                    models.DateTimeField(
                        blank=True, editable=False, verbose_name="Date Created"
                    ),
                ),
                (
                    "modified_on",
                    models.DateTimeField(
                        blank=True, editable=False, verbose_name="Date Modified"
                    ),
                ),
                (
                    "change_type",
                    models.CharField(
                        choices=[("status", "Status"), ("user", "User")], max_length=20
                    ),
                ),
                (
                    "previous_status",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("waiting", "Waiting"),
                            ("in_progress", "In progress"),
                            ("scanned", "Scanned"),
                        ],
                        max_length=20,
                        null=True,
                    ),
                ),
                (
                    "new_status",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("waiting", "Waiting"),
                            ("in_progress", "In progress"),
                            ("scanned", "Scanned"),
                        ],
                        max_length=20,
                        null=True,
                    ),
                ),
                ("description", models.TextField(blank=True)),
                ("history_id", models.AutoField(primary_key=True, serialize=False)),
                ("history_date", models.DateTimeField(db_index=True)),
                ("history_change_reason", models.CharField(max_length=100, null=True)),
                (
                    "history_type",
                    models.CharField(
                        choices=[("+", "Created"), ("~", "Changed"), ("-", "Deleted")],
                        max_length=1,
                    ),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Created by",
                    ),
                ),
                (
                    "drawer",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to="cms.drawerregister",
                    ),
                ),
                (
                    "history_user",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "modified_by",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Modified by",
                    ),
                ),
            ],
            options={
                "verbose_name": "historical Drawer Register Log",
                "verbose_name_plural": "historical Drawer Register Logs",
                "ordering": ("-history_date", "-history_id"),
                "get_latest_by": ("history_date", "history_id"),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name="HistoricalDrawerRegister",
            fields=[
                (
                    "id",
                    models.BigIntegerField(
                        auto_created=True, blank=True, db_index=True, verbose_name="ID"
                    ),
                ),
                (
                    "created_on",
                    models.DateTimeField(
                        blank=True, editable=False, verbose_name="Date Created"
                    ),
                ),
                (
                    "modified_on",
                    models.DateTimeField(
                        blank=True, editable=False, verbose_name="Date Modified"
                    ),
                ),
                (
                    "code",
                    models.CharField(
                        db_index=True,
                        help_text="Three letter unique code",
                        max_length=3,
                    ),
                ),
                (
                    "description",
                    models.TextField(help_text="Description of the drawer or folder"),
                ),
                (
                    "estimated_documents",
                    models.PositiveIntegerField(
                        help_text="Estimated number of documents or cards"
                    ),
                ),
                (
                    "scanning_status",
                    models.CharField(
                        choices=[
                            ("waiting", "Waiting"),
                            ("in_progress", "In progress"),
                            ("scanned", "Scanned"),
                        ],
                        default="waiting",
                        max_length=20,
                    ),
                ),
                ("history_id", models.AutoField(primary_key=True, serialize=False)),
                ("history_date", models.DateTimeField(db_index=True)),
                ("history_change_reason", models.CharField(max_length=100, null=True)),
                (
                    "history_type",
                    models.CharField(
                        choices=[("+", "Created"), ("~", "Changed"), ("-", "Deleted")],
                        max_length=1,
                    ),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Created by",
                    ),
                ),
                (
                    "history_user",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "modified_by",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Modified by",
                    ),
                ),
            ],
            options={
                "verbose_name": "historical Drawer Register",
                "verbose_name_plural": "historical Drawer Register",
                "ordering": ("-history_date", "-history_id"),
                "get_latest_by": ("history_date", "history_id"),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name="HistoricalComment",
            fields=[
                (
                    "id",
                    models.BigIntegerField(
                        auto_created=True, blank=True, db_index=True, verbose_name="ID"
                    ),
                ),
                (
                    "created_on",
                    models.DateTimeField(
                        blank=True, editable=False, verbose_name="Date Created"
                    ),
                ),
                (
                    "modified_on",
                    models.DateTimeField(
                        blank=True, editable=False, verbose_name="Date Modified"
                    ),
                ),
                ("comment", models.TextField()),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("N", "New"),
                            ("P", "Pending"),
                            ("A", "Approved"),
                            ("R", "Rejected"),
                            ("C", "Closed"),
                        ],
                        help_text="Please select your response",
                        max_length=50,
                    ),
                ),
                ("response", models.TextField(blank=True, null=True)),
                ("comment_by", models.CharField(max_length=50)),
                ("history_id", models.AutoField(primary_key=True, serialize=False)),
                ("history_date", models.DateTimeField(db_index=True)),
                ("history_change_reason", models.CharField(max_length=100, null=True)),
                (
                    "history_type",
                    models.CharField(
                        choices=[("+", "Created"), ("~", "Changed"), ("-", "Deleted")],
                        max_length=1,
                    ),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Created by",
                    ),
                ),
                (
                    "history_user",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "modified_by",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Modified by",
                    ),
                ),
                (
                    "specimen_no",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to="cms.accession",
                    ),
                ),
                (
                    "subject",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to="cms.subject",
                    ),
                ),
            ],
            options={
                "verbose_name": "historical Comment",
                "verbose_name_plural": "historical Comments",
                "ordering": ("-history_date", "-history_id"),
                "get_latest_by": ("history_date", "history_id"),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name="HistoricalCollection",
            fields=[
                (
                    "id",
                    models.BigIntegerField(
                        auto_created=True, blank=True, db_index=True, verbose_name="ID"
                    ),
                ),
                (
                    "created_on",
                    models.DateTimeField(
                        blank=True, editable=False, verbose_name="Date Created"
                    ),
                ),
                (
                    "modified_on",
                    models.DateTimeField(
                        blank=True, editable=False, verbose_name="Date Modified"
                    ),
                ),
                ("abbreviation", models.CharField(max_length=4)),
                ("description", models.CharField(max_length=250)),
                ("history_id", models.AutoField(primary_key=True, serialize=False)),
                ("history_date", models.DateTimeField(db_index=True)),
                ("history_change_reason", models.CharField(max_length=100, null=True)),
                (
                    "history_type",
                    models.CharField(
                        choices=[("+", "Created"), ("~", "Changed"), ("-", "Deleted")],
                        max_length=1,
                    ),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Created by",
                    ),
                ),
                (
                    "history_user",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "modified_by",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Modified by",
                    ),
                ),
            ],
            options={
                "verbose_name": "historical Collection",
                "verbose_name_plural": "historical Collections",
                "ordering": ("-history_date", "-history_id"),
                "get_latest_by": ("history_date", "history_id"),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name="HistoricalAccessionRow",
            fields=[
                (
                    "id",
                    models.BigIntegerField(
                        auto_created=True, blank=True, db_index=True, verbose_name="ID"
                    ),
                ),
                (
                    "created_on",
                    models.DateTimeField(
                        blank=True, editable=False, verbose_name="Date Created"
                    ),
                ),
                (
                    "modified_on",
                    models.DateTimeField(
                        blank=True, editable=False, verbose_name="Date Modified"
                    ),
                ),
                (
                    "specimen_suffix",
                    models.CharField(blank=True, default="-", max_length=25, null=True),
                ),
                (
                    "status",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("present", "Present"),
                            ("missing", "Missing"),
                            ("unknown", "Unknown"),
                        ],
                        help_text="Inventory status of the specimen",
                        max_length=10,
                        null=True,
                    ),
                ),
                ("history_id", models.AutoField(primary_key=True, serialize=False)),
                ("history_date", models.DateTimeField(db_index=True)),
                ("history_change_reason", models.CharField(max_length=100, null=True)),
                (
                    "history_type",
                    models.CharField(
                        choices=[("+", "Created"), ("~", "Changed"), ("-", "Deleted")],
                        max_length=1,
                    ),
                ),
                (
                    "accession",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to="cms.accession",
                    ),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Created by",
                    ),
                ),
                (
                    "history_user",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "modified_by",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Modified by",
                    ),
                ),
                (
                    "storage",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to="cms.storage",
                    ),
                ),
            ],
            options={
                "verbose_name": "historical Accession Row",
                "verbose_name_plural": "historical Accession Rows",
                "ordering": ("-history_date", "-history_id"),
                "get_latest_by": ("history_date", "history_id"),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name="HistoricalAccessionReference",
            fields=[
                (
                    "id",
                    models.BigIntegerField(
                        auto_created=True, blank=True, db_index=True, verbose_name="ID"
                    ),
                ),
                (
                    "created_on",
                    models.DateTimeField(
                        blank=True, editable=False, verbose_name="Date Created"
                    ),
                ),
                (
                    "modified_on",
                    models.DateTimeField(
                        blank=True, editable=False, verbose_name="Date Modified"
                    ),
                ),
                ("page", models.CharField(blank=True, max_length=10, null=True)),
                ("history_id", models.AutoField(primary_key=True, serialize=False)),
                ("history_date", models.DateTimeField(db_index=True)),
                ("history_change_reason", models.CharField(max_length=100, null=True)),
                (
                    "history_type",
                    models.CharField(
                        choices=[("+", "Created"), ("~", "Changed"), ("-", "Deleted")],
                        max_length=1,
                    ),
                ),
                (
                    "accession",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to="cms.accession",
                    ),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Created by",
                    ),
                ),
                (
                    "history_user",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "modified_by",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Modified by",
                    ),
                ),
                (
                    "reference",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to="cms.reference",
                    ),
                ),
            ],
            options={
                "verbose_name": "historical Accession Reference",
                "verbose_name_plural": "historical Accession References",
                "ordering": ("-history_date", "-history_id"),
                "get_latest_by": ("history_date", "history_id"),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name="HistoricalAccessionNumberSeries",
            fields=[
                (
                    "id",
                    models.BigIntegerField(
                        auto_created=True, blank=True, db_index=True, verbose_name="ID"
                    ),
                ),
                (
                    "created_on",
                    models.DateTimeField(
                        blank=True, editable=False, verbose_name="Date Created"
                    ),
                ),
                (
                    "modified_on",
                    models.DateTimeField(
                        blank=True, editable=False, verbose_name="Date Modified"
                    ),
                ),
                ("start_from", models.PositiveIntegerField()),
                ("end_at", models.PositiveIntegerField()),
                ("current_number", models.PositiveIntegerField()),
                ("is_active", models.BooleanField(default=True)),
                ("history_id", models.AutoField(primary_key=True, serialize=False)),
                ("history_date", models.DateTimeField(db_index=True)),
                ("history_change_reason", models.CharField(max_length=100, null=True)),
                (
                    "history_type",
                    models.CharField(
                        choices=[("+", "Created"), ("~", "Changed"), ("-", "Deleted")],
                        max_length=1,
                    ),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Created by",
                    ),
                ),
                (
                    "history_user",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "modified_by",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Modified by",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "historical accession number series",
                "verbose_name_plural": "historical accession number seriess",
                "ordering": ("-history_date", "-history_id"),
                "get_latest_by": ("history_date", "history_id"),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name="HistoricalAccessionFieldSlip",
            fields=[
                (
                    "id",
                    models.BigIntegerField(
                        auto_created=True, blank=True, db_index=True, verbose_name="ID"
                    ),
                ),
                (
                    "created_on",
                    models.DateTimeField(
                        blank=True, editable=False, verbose_name="Date Created"
                    ),
                ),
                (
                    "modified_on",
                    models.DateTimeField(
                        blank=True, editable=False, verbose_name="Date Modified"
                    ),
                ),
                (
                    "notes",
                    models.TextField(
                        blank=True, help_text="Additional notes.", null=True
                    ),
                ),
                ("history_id", models.AutoField(primary_key=True, serialize=False)),
                ("history_date", models.DateTimeField(db_index=True)),
                ("history_change_reason", models.CharField(max_length=100, null=True)),
                (
                    "history_type",
                    models.CharField(
                        choices=[("+", "Created"), ("~", "Changed"), ("-", "Deleted")],
                        max_length=1,
                    ),
                ),
                (
                    "accession",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        help_text="Select the accession.",
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to="cms.accession",
                    ),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Created by",
                    ),
                ),
                (
                    "fieldslip",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        help_text="Select the field slip.",
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to="cms.fieldslip",
                    ),
                ),
                (
                    "history_user",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "modified_by",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Modified by",
                    ),
                ),
            ],
            options={
                "verbose_name": "historical Accession-FieldSlip Link",
                "verbose_name_plural": "historical Accession-FieldSlip Links",
                "ordering": ("-history_date", "-history_id"),
                "get_latest_by": ("history_date", "history_id"),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name="HistoricalAccession",
            fields=[
                (
                    "id",
                    models.BigIntegerField(
                        auto_created=True, blank=True, db_index=True, verbose_name="ID"
                    ),
                ),
                (
                    "created_on",
                    models.DateTimeField(
                        blank=True, editable=False, verbose_name="Date Created"
                    ),
                ),
                (
                    "modified_on",
                    models.DateTimeField(
                        blank=True, editable=False, verbose_name="Date Modified"
                    ),
                ),
                (
                    "specimen_no",
                    models.PositiveIntegerField(help_text="Enter the specimen number."),
                ),
                (
                    "instance_number",
                    models.PositiveIntegerField(
                        default=1,
                        help_text="Instance of the specimen number for handling known duplicates.",
                    ),
                ),
                (
                    "type_status",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("Type", "Type"),
                            ("Holotype", "Holotype"),
                            ("Isotype", "Isotype"),
                            ("Lectotype", "Lectotype"),
                            ("Syntype", "Syntype"),
                            ("Isosyntype", "Isosyntype"),
                            ("Paratype", "Paratype"),
                            ("Neotype", "Neotype"),
                            ("Topotype", "Topotype"),
                        ],
                        help_text="Select the type status.",
                        max_length=50,
                        null=True,
                    ),
                ),
                (
                    "comment",
                    models.TextField(
                        blank=True, help_text="Additional comments (if any).", null=True
                    ),
                ),
                ("is_published", models.BooleanField(default=False)),
                ("history_id", models.AutoField(primary_key=True, serialize=False)),
                ("history_date", models.DateTimeField(db_index=True)),
                ("history_change_reason", models.CharField(max_length=100, null=True)),
                (
                    "history_type",
                    models.CharField(
                        choices=[("+", "Created"), ("~", "Changed"), ("-", "Deleted")],
                        max_length=1,
                    ),
                ),
                (
                    "accessioned_by",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        help_text="User who accessioned the specimen.",
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "collection",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        help_text="Select the collection this specimen belongs to.",
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to="cms.collection",
                    ),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Created by",
                    ),
                ),
                (
                    "history_user",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "modified_by",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Modified by",
                    ),
                ),
                (
                    "specimen_prefix",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        help_text="Select the specimen prefix.",
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to="cms.locality",
                    ),
                ),
            ],
            options={
                "verbose_name": "historical Accession",
                "verbose_name_plural": "historical Accessions",
                "ordering": ("-history_date", "-history_id"),
                "get_latest_by": ("history_date", "history_id"),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
    ]
