# Generated by Django 4.2.24 on 2025-09-23 07:35

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


def backfill_media_qc_status(apps, schema_editor):
    Media = apps.get_model("cms", "Media")
    HistoricalMedia = apps.get_model("cms", "HistoricalMedia")
    Media.objects.all().update(qc_status="pending_intern")
    HistoricalMedia.objects.all().update(qc_status="pending_intern")


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ("cms", "0057_alter_accession_created_by_and_more"),
    ]

    operations = [
        migrations.AddField(
            model_name="historicalmedia",
            name="expert_checked_by",
            field=models.ForeignKey(
                blank=True,
                db_constraint=False,
                help_text="Expert reviewer who most recently completed QC on this media.",
                null=True,
                on_delete=django.db.models.deletion.DO_NOTHING,
                related_name="+",
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AddField(
            model_name="historicalmedia",
            name="expert_checked_on",
            field=models.DateTimeField(
                blank=True,
                help_text="Timestamp when the expert review was completed.",
                null=True,
            ),
        ),
        migrations.AddField(
            model_name="historicalmedia",
            name="intern_checked_by",
            field=models.ForeignKey(
                blank=True,
                db_constraint=False,
                help_text="Intern reviewer who most recently advanced this media for expert review.",
                null=True,
                on_delete=django.db.models.deletion.DO_NOTHING,
                related_name="+",
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AddField(
            model_name="historicalmedia",
            name="intern_checked_on",
            field=models.DateTimeField(
                blank=True,
                help_text="Timestamp when the intern review was completed.",
                null=True,
            ),
        ),
        migrations.AddField(
            model_name="historicalmedia",
            name="qc_status",
            field=models.CharField(
                choices=[
                    ("pending_intern", "Pending Intern Review"),
                    ("pending_expert", "Pending Expert Review"),
                    ("approved", "Approved"),
                    ("rejected", "Rejected"),
                ],
                default="pending_intern",
                help_text="Current quality control status for this media entry.",
                max_length=20,
            ),
        ),
        migrations.AddField(
            model_name="historicalmedia",
            name="rows_rearranged",
            field=models.BooleanField(
                default=False,
                help_text="Indicates if specimen rows were rearranged to match the media content during QC.",
            ),
        ),
        migrations.AddField(
            model_name="media",
            name="expert_checked_by",
            field=models.ForeignKey(
                blank=True,
                help_text="Expert reviewer who most recently completed QC on this media.",
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="media_qc_expert_checked",
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AddField(
            model_name="media",
            name="expert_checked_on",
            field=models.DateTimeField(
                blank=True,
                help_text="Timestamp when the expert review was completed.",
                null=True,
            ),
        ),
        migrations.AddField(
            model_name="media",
            name="intern_checked_by",
            field=models.ForeignKey(
                blank=True,
                help_text="Intern reviewer who most recently advanced this media for expert review.",
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="media_qc_intern_checked",
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AddField(
            model_name="media",
            name="intern_checked_on",
            field=models.DateTimeField(
                blank=True,
                help_text="Timestamp when the intern review was completed.",
                null=True,
            ),
        ),
        migrations.AddField(
            model_name="media",
            name="qc_status",
            field=models.CharField(
                choices=[
                    ("pending_intern", "Pending Intern Review"),
                    ("pending_expert", "Pending Expert Review"),
                    ("approved", "Approved"),
                    ("rejected", "Rejected"),
                ],
                default="pending_intern",
                help_text="Current quality control status for this media entry.",
                max_length=20,
            ),
        ),
        migrations.AddField(
            model_name="media",
            name="rows_rearranged",
            field=models.BooleanField(
                default=False,
                help_text="Indicates if specimen rows were rearranged to match the media content during QC.",
            ),
        ),
        migrations.RunPython(backfill_media_qc_status, migrations.RunPython.noop),
        migrations.CreateModel(
            name="MediaQCLog",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "change_type",
                    models.CharField(
                        choices=[
                            ("status", "QC Status"),
                            ("ocr_data", "OCR Data"),
                            ("rows_rearranged", "Rows Rearranged"),
                        ],
                        max_length=32,
                    ),
                ),
                ("field_name", models.CharField(blank=True, max_length=100)),
                ("old_value", models.JSONField(blank=True, null=True)),
                ("new_value", models.JSONField(blank=True, null=True)),
                ("description", models.TextField(blank=True)),
                ("created_on", models.DateTimeField(auto_now_add=True)),
                (
                    "changed_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="media_qc_logs",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "media",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="qc_logs",
                        to="cms.media",
                    ),
                ),
            ],
            options={
                "verbose_name": "Media QC Log",
                "verbose_name_plural": "Media QC Logs",
                "ordering": ["-created_on"],
            },
        ),
        migrations.CreateModel(
            name="MediaQCComment",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("comment", models.TextField()),
                ("created_on", models.DateTimeField(auto_now_add=True)),
                (
                    "created_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="media_qc_comments",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "log",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="comments",
                        to="cms.mediaqclog",
                    ),
                ),
            ],
            options={
                "verbose_name": "Media QC Comment",
                "verbose_name_plural": "Media QC Comments",
                "ordering": ["created_on"],
            },
        ),
    ]
